const {cleanQRInput} = require('./parse');

const qrcode
const qrcodeHeadLess

test('cleanQRInput: Passing a valid QR code', () => {
  expect(cleanQRInput(qrcode)).toEqual(qrcodeHeadLess);
});

test('cleanQRInput: Passing a QR code without the header', () => {
  expect(cleanQRInput(qrcodeHeadLess)).toBeNull();
});

test('cleanQRInput: Passing an empty QR code', () => {
  expect(cleanQRInput('')).toBeNull();
});
